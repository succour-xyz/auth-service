{"/Users/piyushmehta/succour.xyz-server/src/util/db.ts":{"path":"/Users/piyushmehta/succour.xyz-server/src/util/db.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/piyushmehta/succour.xyz-server/src/util/db.ts","sources":["/Users/piyushmehta/succour.xyz-server/src/util/db.ts"],"names":[],"mappings":";;AAAA,2CAA8C;AAE9C,MAAM,MAAM,GAAG,IAAI,qBAAY,EAAE,CAAC;AAElC,kBAAe,MAAM,CAAC","sourcesContent":["import { PrismaClient } from \"@prisma/client\";\n\nconst prisma = new PrismaClient();\n\nexport default prisma;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5b031fa7f672fd82de635622d1a35ecb88002dc5","contentHash":"a5bb0dba8542ddad125cc9afc73cebe06404f16988e3624fdf175e96633ad60c"},"/Users/piyushmehta/succour.xyz-server/src/controller/implmentations/authImpl.ts":{"path":"/Users/piyushmehta/succour.xyz-server/src/controller/implmentations/authImpl.ts","statementMap":{"0":{"start":{"line":2,"column":17},"end":{"line":7,"column":1}},"1":{"start":{"line":3,"column":12},"end":{"line":3,"column":28}},"2":{"start":{"line":3,"column":34},"end":{"line":3,"column":125}},"3":{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},"4":{"start":{"line":4,"column":79},"end":{"line":4,"column":131}},"5":{"start":{"line":5,"column":9},"end":{"line":5,"column":150}},"6":{"start":{"line":5,"column":22},"end":{"line":5,"column":43}},"7":{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},"8":{"start":{"line":5,"column":81},"end":{"line":5,"column":150}},"9":{"start":{"line":6,"column":4},"end":{"line":6,"column":66}},"10":{"start":{"line":8,"column":16},"end":{"line":16,"column":1}},"11":{"start":{"line":9,"column":28},"end":{"line":9,"column":110}},"12":{"start":{"line":9,"column":91},"end":{"line":9,"column":106}},"13":{"start":{"line":10,"column":4},"end":{"line":15,"column":7}},"14":{"start":{"line":11,"column":36},"end":{"line":11,"column":97}},"15":{"start":{"line":11,"column":42},"end":{"line":11,"column":70}},"16":{"start":{"line":11,"column":85},"end":{"line":11,"column":95}},"17":{"start":{"line":12,"column":35},"end":{"line":12,"column":100}},"18":{"start":{"line":12,"column":41},"end":{"line":12,"column":73}},"19":{"start":{"line":12,"column":88},"end":{"line":12,"column":98}},"20":{"start":{"line":13,"column":32},"end":{"line":13,"column":116}},"21":{"start":{"line":14,"column":8},"end":{"line":14,"column":78}},"22":{"start":{"line":17,"column":22},"end":{"line":19,"column":1}},"23":{"start":{"line":18,"column":4},"end":{"line":18,"column":62}},"24":{"start":{"line":20,"column":0},"end":{"line":20,"column":62}},"25":{"start":{"line":21,"column":17},"end":{"line":21,"column":51}},"26":{"start":{"line":22,"column":28},"end":{"line":22,"column":56}},"27":{"start":{"line":23,"column":18},"end":{"line":23,"column":36}},"28":{"start":{"line":24,"column":19},"end":{"line":24,"column":54}},"29":{"start":{"line":25,"column":13},"end":{"line":25,"column":54}},"30":{"start":{"line":26,"column":17},"end":{"line":26,"column":50}},"31":{"start":{"line":27,"column":17},"end":{"line":27,"column":34}},"32":{"start":{"line":28,"column":15},"end":{"line":147,"column":1}},"33":{"start":{"line":36,"column":8},"end":{"line":81,"column":11}},"34":{"start":{"line":36,"column":36},"end":{"line":81,"column":10}},"35":{"start":{"line":37,"column":25},"end":{"line":37,"column":33}},"36":{"start":{"line":38,"column":63},"end":{"line":38,"column":67}},"37":{"start":{"line":39,"column":27},"end":{"line":39,"column":68}},"38":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"39":{"start":{"line":41,"column":16},"end":{"line":41,"column":72}},"40":{"start":{"line":43,"column":12},"end":{"line":80,"column":13}},"41":{"start":{"line":44,"column":39},"end":{"line":44,"column":80}},"42":{"start":{"line":45,"column":16},"end":{"line":76,"column":19}},"43":{"start":{"line":47,"column":36},"end":{"line":71,"column":18}},"44":{"start":{"line":48,"column":20},"end":{"line":70,"column":21}},"45":{"start":{"line":49,"column":24},"end":{"line":64,"column":25}},"46":{"start":{"line":50,"column":43},"end":{"line":56,"column":30}},"47":{"start":{"line":57,"column":28},"end":{"line":57,"column":68}},"48":{"start":{"line":60,"column":40},"end":{"line":60,"column":77}},"49":{"start":{"line":61,"column":28},"end":{"line":61,"column":78}},"50":{"start":{"line":62,"column":28},"end":{"line":62,"column":50}},"51":{"start":{"line":63,"column":28},"end":{"line":63,"column":38}},"52":{"start":{"line":67,"column":36},"end":{"line":67,"column":75}},"53":{"start":{"line":68,"column":24},"end":{"line":68,"column":92}},"54":{"start":{"line":69,"column":24},"end":{"line":69,"column":34}},"55":{"start":{"line":73,"column":32},"end":{"line":73,"column":67}},"56":{"start":{"line":74,"column":20},"end":{"line":74,"column":67}},"57":{"start":{"line":75,"column":20},"end":{"line":75,"column":30}},"58":{"start":{"line":79,"column":16},"end":{"line":79,"column":68}},"59":{"start":{"line":90,"column":8},"end":{"line":134,"column":11}},"60":{"start":{"line":90,"column":35},"end":{"line":134,"column":10}},"61":{"start":{"line":91,"column":25},"end":{"line":91,"column":33}},"62":{"start":{"line":92,"column":40},"end":{"line":92,"column":44}},"63":{"start":{"line":93,"column":12},"end":{"line":133,"column":13}},"64":{"start":{"line":94,"column":16},"end":{"line":129,"column":19}},"65":{"start":{"line":97,"column":20},"end":{"line":123,"column":21}},"66":{"start":{"line":98,"column":24},"end":{"line":117,"column":27}},"67":{"start":{"line":101,"column":28},"end":{"line":111,"column":29}},"68":{"start":{"line":102,"column":32},"end":{"line":102,"column":62}},"69":{"start":{"line":103,"column":32},"end":{"line":103,"column":56}},"70":{"start":{"line":104,"column":32},"end":{"line":104,"column":52}},"71":{"start":{"line":107,"column":44},"end":{"line":107,"column":91}},"72":{"start":{"line":108,"column":32},"end":{"line":108,"column":53}},"73":{"start":{"line":109,"column":32},"end":{"line":109,"column":122}},"74":{"start":{"line":110,"column":32},"end":{"line":110,"column":42}},"75":{"start":{"line":114,"column":40},"end":{"line":114,"column":83}},"76":{"start":{"line":115,"column":28},"end":{"line":115,"column":83}},"77":{"start":{"line":116,"column":28},"end":{"line":116,"column":38}},"78":{"start":{"line":120,"column":36},"end":{"line":120,"column":73}},"79":{"start":{"line":121,"column":24},"end":{"line":121,"column":96}},"80":{"start":{"line":122,"column":24},"end":{"line":122,"column":34}},"81":{"start":{"line":126,"column":20},"end":{"line":128,"column":21}},"82":{"start":{"line":127,"column":24},"end":{"line":127,"column":45}},"83":{"start":{"line":132,"column":16},"end":{"line":132,"column":65}},"84":{"start":{"line":141,"column":8},"end":{"line":145,"column":10}},"85":{"start":{"line":142,"column":12},"end":{"line":144,"column":15}},"86":{"start":{"line":143,"column":16},"end":{"line":143,"column":43}},"87":{"start":{"line":148,"column":0},"end":{"line":150,"column":13}},"88":{"start":{"line":151,"column":0},"end":{"line":151,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":46},"end":{"line":2,"column":47}},"loc":{"start":{"line":2,"column":87},"end":{"line":7,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":44},"end":{"line":8,"column":45}},"loc":{"start":{"line":8,"column":89},"end":{"line":16,"column":1}},"line":8},"2":{"name":"adopt","decl":{"start":{"line":9,"column":13},"end":{"line":9,"column":18}},"loc":{"start":{"line":9,"column":26},"end":{"line":9,"column":112}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":70},"end":{"line":9,"column":71}},"loc":{"start":{"line":9,"column":89},"end":{"line":9,"column":108}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":10,"column":36},"end":{"line":10,"column":37}},"loc":{"start":{"line":10,"column":63},"end":{"line":15,"column":5}},"line":10},"5":{"name":"fulfilled","decl":{"start":{"line":11,"column":17},"end":{"line":11,"column":26}},"loc":{"start":{"line":11,"column":34},"end":{"line":11,"column":99}},"line":11},"6":{"name":"rejected","decl":{"start":{"line":12,"column":17},"end":{"line":12,"column":25}},"loc":{"start":{"line":12,"column":33},"end":{"line":12,"column":102}},"line":12},"7":{"name":"step","decl":{"start":{"line":13,"column":17},"end":{"line":13,"column":21}},"loc":{"start":{"line":13,"column":30},"end":{"line":13,"column":118}},"line":13},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":56},"end":{"line":17,"column":57}},"loc":{"start":{"line":17,"column":71},"end":{"line":19,"column":1}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":18},"end":{"line":146,"column":5}},"line":29},"10":{"name":"(anonymous_10)","decl":{"start":{"line":36,"column":22},"end":{"line":36,"column":23}},"loc":{"start":{"line":36,"column":36},"end":{"line":81,"column":10}},"line":36},"11":{"name":"(anonymous_11)","decl":{"start":{"line":36,"column":68},"end":{"line":36,"column":69}},"loc":{"start":{"line":36,"column":81},"end":{"line":81,"column":9}},"line":36},"12":{"name":"(anonymous_12)","decl":{"start":{"line":47,"column":26},"end":{"line":47,"column":27}},"loc":{"start":{"line":47,"column":36},"end":{"line":71,"column":18}},"line":47},"13":{"name":"(anonymous_13)","decl":{"start":{"line":47,"column":68},"end":{"line":47,"column":69}},"loc":{"start":{"line":47,"column":81},"end":{"line":71,"column":17}},"line":47},"14":{"name":"(anonymous_14)","decl":{"start":{"line":72,"column":27},"end":{"line":72,"column":28}},"loc":{"start":{"line":72,"column":38},"end":{"line":76,"column":17}},"line":72},"15":{"name":"(anonymous_15)","decl":{"start":{"line":90,"column":21},"end":{"line":90,"column":22}},"loc":{"start":{"line":90,"column":35},"end":{"line":134,"column":10}},"line":90},"16":{"name":"(anonymous_16)","decl":{"start":{"line":90,"column":67},"end":{"line":90,"column":68}},"loc":{"start":{"line":90,"column":80},"end":{"line":134,"column":9}},"line":90},"17":{"name":"(anonymous_17)","decl":{"start":{"line":96,"column":26},"end":{"line":96,"column":27}},"loc":{"start":{"line":96,"column":36},"end":{"line":124,"column":17}},"line":96},"18":{"name":"(anonymous_18)","decl":{"start":{"line":100,"column":34},"end":{"line":100,"column":35}},"loc":{"start":{"line":100,"column":47},"end":{"line":112,"column":25}},"line":100},"19":{"name":"(anonymous_19)","decl":{"start":{"line":113,"column":35},"end":{"line":113,"column":36}},"loc":{"start":{"line":113,"column":46},"end":{"line":117,"column":25}},"line":113},"20":{"name":"(anonymous_20)","decl":{"start":{"line":125,"column":27},"end":{"line":125,"column":28}},"loc":{"start":{"line":125,"column":38},"end":{"line":129,"column":17}},"line":125},"21":{"name":"(anonymous_21)","decl":{"start":{"line":141,"column":22},"end":{"line":141,"column":23}},"loc":{"start":{"line":141,"column":36},"end":{"line":145,"column":9}},"line":141},"22":{"name":"(anonymous_22)","decl":{"start":{"line":142,"column":32},"end":{"line":142,"column":33}},"loc":{"start":{"line":142,"column":38},"end":{"line":144,"column":13}},"line":142}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":17},"end":{"line":7,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":18},"end":{"line":2,"column":22}},{"start":{"line":2,"column":26},"end":{"line":2,"column":41}},{"start":{"line":2,"column":46},"end":{"line":7,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":34},"end":{"line":3,"column":125}},"type":"cond-expr","locations":[{"start":{"line":3,"column":42},"end":{"line":3,"column":48}},{"start":{"line":3,"column":51},"end":{"line":3,"column":125}}],"line":3},"2":{"loc":{"start":{"line":3,"column":51},"end":{"line":3,"column":125}},"type":"cond-expr","locations":[{"start":{"line":3,"column":67},"end":{"line":3,"column":118}},{"start":{"line":3,"column":121},"end":{"line":3,"column":125}}],"line":3},"3":{"loc":{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},"type":"if","locations":[{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},{"start":{"line":4,"column":4},"end":{"line":5,"column":150}}],"line":4},"4":{"loc":{"start":{"line":4,"column":8},"end":{"line":4,"column":77}},"type":"binary-expr","locations":[{"start":{"line":4,"column":8},"end":{"line":4,"column":35}},{"start":{"line":4,"column":39},"end":{"line":4,"column":77}}],"line":4},"5":{"loc":{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},"type":"if","locations":[{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},{"start":{"line":5,"column":58},"end":{"line":5,"column":150}}],"line":5},"6":{"loc":{"start":{"line":5,"column":85},"end":{"line":5,"column":149}},"type":"binary-expr","locations":[{"start":{"line":5,"column":86},"end":{"line":5,"column":143}},{"start":{"line":5,"column":148},"end":{"line":5,"column":149}}],"line":5},"7":{"loc":{"start":{"line":5,"column":86},"end":{"line":5,"column":143}},"type":"cond-expr","locations":[{"start":{"line":5,"column":94},"end":{"line":5,"column":98}},{"start":{"line":5,"column":101},"end":{"line":5,"column":143}}],"line":5},"8":{"loc":{"start":{"line":5,"column":101},"end":{"line":5,"column":143}},"type":"cond-expr","locations":[{"start":{"line":5,"column":109},"end":{"line":5,"column":126}},{"start":{"line":5,"column":129},"end":{"line":5,"column":143}}],"line":5},"9":{"loc":{"start":{"line":6,"column":11},"end":{"line":6,"column":62}},"type":"binary-expr","locations":[{"start":{"line":6,"column":11},"end":{"line":6,"column":16}},{"start":{"line":6,"column":20},"end":{"line":6,"column":21}},{"start":{"line":6,"column":25},"end":{"line":6,"column":62}}],"line":6},"10":{"loc":{"start":{"line":8,"column":16},"end":{"line":16,"column":1}},"type":"binary-expr","locations":[{"start":{"line":8,"column":17},"end":{"line":8,"column":21}},{"start":{"line":8,"column":25},"end":{"line":8,"column":39}},{"start":{"line":8,"column":44},"end":{"line":16,"column":1}}],"line":8},"11":{"loc":{"start":{"line":9,"column":35},"end":{"line":9,"column":109}},"type":"cond-expr","locations":[{"start":{"line":9,"column":56},"end":{"line":9,"column":61}},{"start":{"line":9,"column":64},"end":{"line":9,"column":109}}],"line":9},"12":{"loc":{"start":{"line":10,"column":16},"end":{"line":10,"column":34}},"type":"binary-expr","locations":[{"start":{"line":10,"column":16},"end":{"line":10,"column":17}},{"start":{"line":10,"column":22},"end":{"line":10,"column":33}}],"line":10},"13":{"loc":{"start":{"line":13,"column":32},"end":{"line":13,"column":115}},"type":"cond-expr","locations":[{"start":{"line":13,"column":46},"end":{"line":13,"column":67}},{"start":{"line":13,"column":70},"end":{"line":13,"column":115}}],"line":13},"14":{"loc":{"start":{"line":14,"column":51},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":51},"end":{"line":14,"column":61}},{"start":{"line":14,"column":65},"end":{"line":14,"column":67}}],"line":14},"15":{"loc":{"start":{"line":17,"column":22},"end":{"line":19,"column":1}},"type":"binary-expr","locations":[{"start":{"line":17,"column":23},"end":{"line":17,"column":27}},{"start":{"line":17,"column":31},"end":{"line":17,"column":51}},{"start":{"line":17,"column":56},"end":{"line":19,"column":1}}],"line":17},"16":{"loc":{"start":{"line":18,"column":11},"end":{"line":18,"column":61}},"type":"cond-expr","locations":[{"start":{"line":18,"column":37},"end":{"line":18,"column":40}},{"start":{"line":18,"column":43},"end":{"line":18,"column":61}}],"line":18},"17":{"loc":{"start":{"line":18,"column":12},"end":{"line":18,"column":33}},"type":"binary-expr","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":15}},{"start":{"line":18,"column":19},"end":{"line":18,"column":33}}],"line":18},"18":{"loc":{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":42,"column":13}},{"start":{"line":40,"column":12},"end":{"line":42,"column":13}}],"line":40},"19":{"loc":{"start":{"line":48,"column":20},"end":{"line":70,"column":21}},"type":"if","locations":[{"start":{"line":48,"column":20},"end":{"line":70,"column":21}},{"start":{"line":48,"column":20},"end":{"line":70,"column":21}}],"line":48},"20":{"loc":{"start":{"line":97,"column":20},"end":{"line":123,"column":21}},"type":"if","locations":[{"start":{"line":97,"column":20},"end":{"line":123,"column":21}},{"start":{"line":97,"column":20},"end":{"line":123,"column":21}}],"line":97},"21":{"loc":{"start":{"line":101,"column":28},"end":{"line":111,"column":29}},"type":"if","locations":[{"start":{"line":101,"column":28},"end":{"line":111,"column":29}},{"start":{"line":101,"column":28},"end":{"line":111,"column":29}}],"line":101},"22":{"loc":{"start":{"line":126,"column":20},"end":{"line":128,"column":21}},"type":"if","locations":[{"start":{"line":126,"column":20},"end":{"line":128,"column":21}},{"start":{"line":126,"column":20},"end":{"line":128,"column":21}}],"line":126}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":2,"12":1,"13":2,"14":2,"15":2,"16":1,"17":0,"18":0,"19":0,"20":3,"21":2,"22":1,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":0,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":1,"57":1,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":1,"88":1},"f":{"0":1,"1":2,"2":2,"3":1,"4":2,"5":2,"6":0,"7":3,"8":2,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"0":[1,1,1],"1":[1,0],"2":[0,0],"3":[0,1],"4":[1,1],"5":[1,0],"6":[1,1],"7":[1,0],"8":[0,0],"9":[1,0,0],"10":[1,1,1],"11":[1,1],"12":[2,2],"13":[1,2],"14":[2,2],"15":[1,1,1],"16":[1,1],"17":[2,2],"18":[0,1],"19":[1,0],"20":[0,0],"21":[0,0],"22":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/piyushmehta/succour.xyz-server/src/controller/implmentations/authImpl.ts","sources":["/Users/piyushmehta/succour.xyz-server/src/controller/implmentations/authImpl.ts"],"names":[],"mappings":"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","sourcesContent":["import bcrypt from \"bcrypt\";\nimport { Request, Response } from \"express\";\nimport { validationResult } from \"express-validator\";\nimport { error } from \"winston\";\nimport IAuth from \"../IAuth\";\nimport {\n  EMAIL_DUPLICATE,\n  EMAIL_NOT_FOUND,\n  INVALID_EMAIL_OR_PASSWORD,\n  PASSWORD_MISMATCH,\n} from \"../../constants/messages\";\nimport prisma from \"../../util/db\";\nimport {\n  ENCRYPTION_COMPARE_FAIL,\n  ENCRYPTION_FAIL,\n} from \"../../constants/errors\";\nimport { LoginType, SignUpBody } from \"../../types/User\";\nimport { Service } from \"typedi\";\n\ndeclare module \"express-session\" {\n  interface Session {\n    isLoggedIn: boolean;\n    user: LoginType;\n  }\n}\n\n@Service()\nexport default class AuthImpl implements IAuth {\n  /**\n   * Signup\n   * @static\n   * @param req\n   * @param res\n   */\n  signUp: (req: Request, res: Response) => Promise<unknown> = async (\n    req: Request,\n    res: Response\n  ): Promise<unknown> => {\n    const body = req.body as SignUpBody;\n    const { name, email, password, confirmPassword } = body;\n\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      return res.status(400).json({ errors: errors.array() });\n    }\n    try {\n      const hashedPassword = await bcrypt.hash(password, 10);\n      bcrypt\n        .compare(confirmPassword, hashedPassword)\n        .then(async (same) => {\n          if (same) {\n            try {\n              const result = await prisma.user.create({\n                data: {\n                  email,\n                  password: hashedPassword,\n                  name,\n                },\n              });\n              return res.sendStatus(201).json(result);\n            } catch (error) {\n              const err = new Error(EMAIL_DUPLICATE);\n              res.json({ message: EMAIL_DUPLICATE });\n              res.status(409).end();\n              throw err;\n            }\n          } else {\n            const err = new Error(PASSWORD_MISMATCH);\n            res.sendStatus(406).json({ message: PASSWORD_MISMATCH });\n            throw err;\n          }\n        })\n        .catch((error) => {\n          const err = new Error(ENCRYPTION_FAIL);\n          console.error(ENCRYPTION_FAIL, error);\n          throw err;\n        });\n    } catch (error) {\n      return res.json({ message: error }).sendStatus(406);\n    }\n  };\n\n  /**\n   *  Logins a User\n   *\n   * @static\n   * @param {Request} req\n   * @param {Response} res\n   * @memberof AuthImpl\n   */\n  login: (req: Request, res: Response) => Promise<unknown> = async (\n    req: Request,\n    res: Response\n  ): Promise<void> => {\n    const body = req.body as SignUpBody;\n    const { email, password } = body;\n    try {\n      await prisma.user\n        .findUnique({ where: { email } })\n        .then((user) => {\n          if (user) {\n            bcrypt\n              .compare(password, user.password)\n              .then((doMatch) => {\n                if (doMatch) {\n                  req.session.isLoggedIn = true;\n                  req.session.user = user;\n                  res.sendStatus(200);\n                } else {\n                  const err = new Error(INVALID_EMAIL_OR_PASSWORD);\n                  res.statusCode = 406;\n                  res.json({ message: INVALID_EMAIL_OR_PASSWORD, error }).end();\n                  throw err;\n                }\n              })\n              .catch((error) => {\n                const err = new Error(ENCRYPTION_COMPARE_FAIL);\n                console.error(ENCRYPTION_COMPARE_FAIL, error);\n                throw err;\n              });\n          } else {\n            const err = new Error(EMAIL_NOT_FOUND);\n            res.json({ message: EMAIL_NOT_FOUND }).sendStatus(404).end();\n            throw err;\n          }\n        })\n        .catch((error) => {\n          if (error) {\n            console.error(error);\n          }\n        });\n    } catch (error) {\n      console.error(EMAIL_NOT_FOUND, error);\n    }\n  };\n\n  /**\n   * Logout\n   * @static\n   * @param req\n   * @param res\n   */\n  logout: (req: Request, res: Response) => void = (\n    req: Request,\n    res: Response\n  ) => {\n    req.session.destroy(() => {\n      return res.sendStatus(204);\n    });\n  };\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"47e3221a9e70f4f7c2755b54151d392109e2265b","contentHash":"4e75d76a3b5ae779b61f039770a77ce89da9df91795b2b4a0fa78de592dd1336"},"/Users/piyushmehta/succour.xyz-server/src/constants/messages.ts":{"path":"/Users/piyushmehta/succour.xyz-server/src/constants/messages.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":156}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":61}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":52}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":65}},"5":{"start":{"line":19,"column":0},"end":{"line":19,"column":65}},"6":{"start":{"line":23,"column":0},"end":{"line":23,"column":64}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/piyushmehta/succour.xyz-server/src/constants/messages.ts","sources":["/Users/piyushmehta/succour.xyz-server/src/constants/messages.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACU,QAAA,eAAe,GAAG,kCAAkC,CAAC;AAClE;;GAEG;AACU,QAAA,iBAAiB,GAAG,uBAAuB,CAAC;AACzD;;GAEG;AACU,QAAA,eAAe,GAAG,sCAAsC,CAAC;AACtE;;GAEG;AACU,QAAA,sBAAsB,GAAG,+BAA+B,CAAC;AACtE;;GAEG;AACU,QAAA,yBAAyB,GAAG,2BAA2B,CAAC","sourcesContent":["/**\n * Constant Duplicate Message\n */\nexport const EMAIL_DUPLICATE = \"This email is already registered\";\n/**\n * Constant Password Mismatch\n */\nexport const PASSWORD_MISMATCH = \"Passwords Don't match\";\n/**\n * Constant Email Not Found\n */\nexport const EMAIL_NOT_FOUND = \"Email Not Registered, Please Sign Up\";\n/**\n * Constant Enter correct Password\n */\nexport const ENTER_CORRECT_PASSWORD = \"Please enter correct password\";\n/**\n * Constant Invalid Email or Password\n */\nexport const INVALID_EMAIL_OR_PASSWORD = \"Invalid Email or Password\";\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f339e524fe4c81bfd6019418464595a053e0a969","contentHash":"b6b3220464479eefef9d13aab896d411bfb787d253ac9edcd087e174bbfd6901"},"/Users/piyushmehta/succour.xyz-server/src/constants/errors.ts":{"path":"/Users/piyushmehta/succour.xyz-server/src/constants/errors.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":67}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":79}},"3":{"start":{"line":11,"column":0},"end":{"line":11,"column":63}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/Users/piyushmehta/succour.xyz-server/src/constants/errors.ts","sources":["/Users/piyushmehta/succour.xyz-server/src/constants/errors.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACU,QAAA,uBAAuB,GAClC,4CAA4C,CAAC;AAE/C;;GAEG;AACU,QAAA,eAAe,GAAG,oCAAoC,CAAC","sourcesContent":["/**\n * Encryption compare failed constant\n */\nexport const ENCRYPTION_COMPARE_FAIL =\n  \"## Encryption Comparison failing, reason: \";\n\n/**\n * Encryption failing constant\n */\nexport const ENCRYPTION_FAIL = \"## Encryption is failing, reason: \";\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"947953a0757027abab623add53cb17c830c57250","contentHash":"b8036206c4f0adea8a76352b6203278e9c3275b9ff700f0c65123b850c60c465"}}